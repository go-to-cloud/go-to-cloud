import{_ as s,c as a,o as n,N as e}from"./chunks/framework.cd9250a1.js";const u=JSON.parse('{"title":"Docker部署","description":"","frontmatter":{},"headers":[],"relativePath":"installation/docker_compose.md","lastUpdated":1680010726000}'),l={name:"installation/docker_compose.md"},o=e(`<h1 id="docker部署" tabindex="-1">Docker部署 <a class="header-anchor" href="#docker部署" aria-label="Permalink to &quot;Docker部署&quot;">​</a></h1><h2 id="前置准备" tabindex="-1">前置准备 <a class="header-anchor" href="#前置准备" aria-label="Permalink to &quot;前置准备&quot;">​</a></h2><ul><li>Docker</li><li>docker-compose</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>docker compose</code>帮助我们一次性部署多个镜像</p><p>以<code>GTC</code>为例，共需要两个镜像(<em>后端服务、前端服务</em>)以及一个Mysql数据库实例</p><p>借助 <code>docker compose</code>，可以一键同时部署这三个镜像，并完成他们之间互相访问的配置</p><p>更多关于<a href="https://github.com/docker/compose/blob/v2/README.md#where-to-get-docker-compose" target="_blank" rel="noreferrer">Docker Compose的内容请看这里</a></p></div><h2 id="一键安装" tabindex="-1">一键安装 <a class="header-anchor" href="#一键安装" aria-label="Permalink to &quot;一键安装&quot;">​</a></h2><p>下载<a href="/docker-compose.yaml">docker-compose.yaml</a>文件，然后切换到存放目录</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>建议将docker-compose.yaml文件存放空目录（部署成功后会产生mysql持久化文件），执行以下命令</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span></span>
<span class="line"></span></code></pre></div></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>首次执行会下载三个镜像包，其中mysql:8.0较大，需要耐心等待一些时间。</p><p>执行成功后，可以在宿主机打开网址</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">http://localhost:8080</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>看到登录页面后表示部署成功</p></div><h2 id="docker-compose文件说明" tabindex="-1">docker-compose文件说明 <a class="header-anchor" href="#docker-compose文件说明" aria-label="Permalink to &quot;docker-compose文件说明&quot;">​</a></h2><h3 id="gtc-frontend" tabindex="-1">gtc-frontend <a class="header-anchor" href="#gtc-frontend" aria-label="Permalink to &quot;gtc-frontend&quot;">​</a></h3><blockquote><p>镜像<code>gtc-frontend</code>表示前端服务，占用宿主机<code>8080</code>端口</p></blockquote><blockquote><p>如果宿主机的<code>8080</code>端口被占用，则请修改<code>docker-compose.yaml</code>文件</p></blockquote><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line highlighted"><span style="color:#FFCB6B;">...</span><span style="color:#C3E88D;">略</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">restart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">always</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">networks</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gtc-network</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">8080:80</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">gtc-service</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">go-to-cloud</span></span>
<span class="line"><span style="color:#FFCB6B;">...</span><span style="color:#C3E88D;">略</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>上方代码第<code>6</code>行 端口<code>8080</code>修改为其他有效端口即可</p><p>部署后的访问地址也变为新的端口</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果之前已经部署过，则可以再次执行<code>docker-compose up</code>重新部署</p><p>mysql数据不会丢失</p></div><h3 id="gtc-service" tabindex="-1">gtc-service <a class="header-anchor" href="#gtc-service" aria-label="Permalink to &quot;gtc-service&quot;">​</a></h3><blockquote><p>gtc-service是后端服务，不占用宿主机端口，按默认部署即可</p></blockquote><h3 id="mysql" tabindex="-1">mysql <a class="header-anchor" href="#mysql" aria-label="Permalink to &quot;mysql&quot;">​</a></h3><blockquote><p>数据库<code>mysql</code>镜像，为了方便体验内置在docker-compose中，如果想使用已有实例，可以移除本镜像，但需要注意修改<code>gtc-service</code>的相关参数</p></blockquote><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line highlighted"><wbr></span>
<span class="line"><span style="color:#FFCB6B;">...</span><span style="color:#C3E88D;">略</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">environment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ENV=dev</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dbuser=root</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dbpwd=123456</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dburl=mysql</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">schema=gotocloud</span></span>
<span class="line"><span style="color:#FFCB6B;">...</span><span style="color:#C3E88D;">略</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>docker-compose.yaml</code>文件中找到上方代码的位置，并将db*和schema按实际情况调整</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果移除 <code>mysql</code> 镜像，还要注意将所有依赖此镜像的节点删除，如下述代码需要移除</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">depends_on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span></span>
<span class="line"></span></code></pre></div></div>`,22),p=[o];function c(t,r,i,d,m,y){return n(),a("div",null,p)}const C=s(l,[["render",c]]);export{u as __pageData,C as default};
